[user]
	name = Eric Hartmann
	email = 112486+ehartmann@users.noreply.github.com
	signingkey = CAA81E66
[core]
	autocrlf = input
	safecrlf = true
	excludesfile = /home/eric/.gitignore_global
	pager = delta

[delta]
    plus-style = "syntax #012800"
    minus-style = "syntax #340001"
    syntax-theme = Monokai Extended
    navigate = true
    side-by-side = true
    line-numbers = true
    colorMoved = default

[interactive]
    diffFilter = delta --color-only

[github]
	user = ehartmann
	email = hartmann.eric@gmail.com
[color]
	ui = auto
[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	ls = log --pretty=format:%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn] --decorate
	st = status -sb
	ci = commit -v
	co = checkout
	br = branch
	ds = diff --staged
	standup = log --since '1 day ago' --oneline --author hartmann.eric@gmail.com
	graph = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'
	undo = reset --soft HEAD^
	amend = commit --amend -C HEAD
	unstage = reset HEAD
	commend = commit --amend --no-edit
	it = !git init && git commit -m “root” --allow-empty
	shorty = status --short --branch
	merc = merge --no-ff
	grog = log --graph --abbrev-commit --decorate --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
	webui = !/home/eric/Projects/eric/git-webui/release/libexec/git-core/git-webui
  	fixup = !SHA=$(git log -n 50 --color=always --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --no-merges | fzf --ansi --multi --no-sort | cut -c -7) && echo $SHA && git commit --fixup $SHA && git rebase -i --autosquash $SHA~
	serve = daemon --reuseaddr --base-path=.git --export-all --verbose --strict-paths --listen=192.168.1.30 .git/
	serve-with-push = daemon --reuseaddr --base-path=.git --export-all --verbose --strict-paths --enable=receive-pack .git/
	state='git fetch --prune ; git fetch --tags ; clear && git branch -vv && git status'
	rebasebr = "!f() { br=${1}; git fetch origin ${br} && git rebase origin/${br}; }; f"
	currentbr = "!f() { git branch | grep \\* | cut -d \" \" -f2; }; f"
	rebaseonto = "!f() { git rebase --onto $1 $2 $(git currentbr); }; f"
	amend = !git add -A && git commit -a --amend --no-edit

[push]
	default = current
[help]
	autocorrect = 25
	autocorrect = -1
[branch]
	autosetuprebase = always
[pull]
#	rebase = preserve
[rebase]
	autosquash = true
	autoStash = true
[merge]
	renameLimit = 10000
[hub]
	protocol = ssh

[diff]
	tool = meld
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[url "git@github.com:"]
	insteadOf = https://github.com/
[webui]
	autoupdate = true
[commit]
	gpgsign = true
[sequence]
	editor = interactive-rebase-tool
[rerere]
	enabled = false
[absorb]
	maxStack = 50

[diff "sops"]
	textconv = $HOME/bin/merge-secrets sops-textconv
	# Do not cache the vault contents
	cachetextconv = false

[merge "sops"]
	name = sops merge driver
	driver = $HOME/bin/merge-secrets sops-merge %O %A %B 
	#%P

[diff "ansible-vault"]
	textconv = $HOME/bin/merge-secrets vault-textconv
	# Do not cache the vault contents
	cachetextconv = false

[merge "ansible-vault"]
	name = ansible-vault merge driver
	driver = $HOME/bin/merge-secrets vault-merge %O %A %B 
	#%P
[advice]
	detachedHead = false
[fetch]
	prune = true
