# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export TERM="xterm-256color"

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  ant
  autopep8
  aws
  bower
  brew
  command-not-found
  common-aliases
  docker
  docker-compose
  docker-machine
  dotenv
  example
  fasd
  gb
  gh
  git
  git-extras
  git-flow
  git-prompt
  gitfast
  github
  gitignore
  glab
  golang
  gradle
  history
  httpie
  jira
  jsontools
  kitchen
  mercurial
  mvn
  node
  nomad
  npm
  nvm
  pip
  pipenv
  pj
  poetry
  pyenv
  pylint
  python
  rails
  rake
  rbenv
  rsync
  ruby
  rust
  screen
  sdk
  sublime
  sudo
  systemd
  terminitor
  terraform
  tig
  tmux
  tmuxinator
  vagrant
  vagrant-prompt
  virtualenv
  wd
  zsh-autosuggestions
  zsh-completions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

#autoload -Uz vcs_info
#autoload zmv
#zstyle ':vcs_info:*' enable hg git bzr svn
#zstyle ':vcs_info:hg*:*' check-for-changes true
#zstyle ':vcs_info:hg*:netbeans' use-simple true
#zstyle ':vcs_info:hg*' actionformats "(%s|%a)[%i%u %b %m]"

# Set locales
export LANG="en_US.UTF-8"
export LANGUAGE="en_US:en"
export LC_NUMERIC="fr_FR.UTF-8"
export LC_TIME="fr_FR.UTF-8"
export LC_MONETARY="fr_FR.UTF-8"
export LC_PAPER="fr_FR.UTF-8"
export LC_NAME="fr_FR.UTF-8"
export LC_ADDRESS="fr_FR.UTF-8"
export LC_TELEPHONE="fr_FR.UTF-8"
export LC_MEASUREMENT="fr_FR.UTF-8"
export LC_IDENTIFICATION="fr_FR.UTF-8"

if [ -r ~/.profile ]; then . ~/.profile; fi

platform=`uname`

export DEBEMAIL=hartmann.eric@gmail.com
export DEBFULLNAME="Eric Hartmann"
export ANSIBLE_NOCOWS=1
export ANT_OPTS="-Xmx784M -Xms128M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=128m"
export AWS_SDK_LOAD_CONFIG=1
export MAVEN_OPTS="-Xmx784M -Xms128M"
export GRADLE_OPTS="-Xmx784M -Xms128M"
export GRADLE_USER_HOME="$HOME/.gradle"
#export MAVEN_DEBUG_OPTS="-Xmx784M -Xms128M -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address=8000"
export NODE_PATH=/opt/eric/npm
export Ã¹=$HOME/Projects
export GOPATH=$HOME/go
export PATH=/usr/lib/ccache/bin/:$HOME/.rbenv/bin:$HOME/.cargo/bin:$HOME/bin/:$HOME/.local/bin:$JAVA_HOME/bin:$MAVEN_HOME/bin:$ANT_HOME/bin:/opt/eric/bin/:$PYENV_ROOT/bin:/opt/eric/npm/bin:/opt/eric/go/bin:/usr/local/heroku/bin:/usr/local/bin:$PATH:/usr/local/bin:$GOPATH/bin:/opt/eric/sonar-scanner/bin/:$PATH
export SONARQUBE_USER_PATCHES_HOME=$HOME/Projects/eric/patches
export PROJECT_PATHS=(~/Projects/sonarsource ~/Projects/eric ~/Projects/za ~/Projects/servebox)

if [[ "$platform" == "Darwin" ]]; then
    export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
    export PATH=$HOME/bin/mac:/usr/local/sbin:$PATH
else
    export PATH=$HOME/bin/linux:$PATH
fi

# Alias
ap_pass() {
  ansible-playbook ${@:2} --vault-password-file ~/.$1_pass
}

av_pass() {
  ansible-vault ${@:2} --vault-password-file ~/.$1_pass
}

ap() {
  ansible-playbook $@
}

av() {
  ansible-vault $@
}

function apt-history() {
    case "$1" in
      install)
            cat /var/log/dpkg.log | grep 'install '
            ;;
      upgrade|remove)
            cat /var/log/dpkg.log | grep $1
            ;;
      rollback)
            cat /var/log/dpkg.log | grep upgrade | \
                grep "$2" -A10000000 | \
                grep "$3" -B10000000 | \
                awk '{print $4"="$5}'
            ;;
      *)
            cat /var/log/dpkg.log
            ;;
    esac
}


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#compdef ap=_ansible-playbook
#compdef _ansible-vault av=ansible-vault

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias pssh="parallel-ssh -i -O StrictHostKeyChecking=no -O UserKnownHostsFile=/dev/null -O GlobalKnownHostsFile=/dev/null"
alias gr="gradle"

unalias rm
unalias cp
unalias gradle
unalias gops

# Store credentials there
[[ -a "$HOME/.zshrc_extra" ]] && source "$HOME/.zshrc_extra"

source "$HOME/.sdkman/bin/sdkman-init.sh"

if [ $TERMINIX_ID ] || [ $TILIX_ID ] || [ $VTE_VERSION ]; then
  source /etc/profile.d/vte.sh
fi

eval "$(rbenv init -)"
eval "$(pyenv init -)"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"

[[ -s "$HOME/.zshrc_credentials" ]] && source $HOME/.zshrc_credentials


autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /home/eric/bin/linux/vault vault

source /home/eric/.config/broot/launcher/bash/br

# NVM
export NVM_DIR="$HOME/.nvm"

source $NVM_DIR/nvm.sh

export PATH="$HOME/.poetry/bin:$PATH"
